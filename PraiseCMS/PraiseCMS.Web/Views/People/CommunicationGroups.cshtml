@model PraiseCMS.DataAccess.Models.CommunicationGroupsDashboard

@{
    ViewBag.Title = "Communication Groups";
}

@section leftsubheader{
    @Html.Partial("_PeopleSubheader")
}

<div class="card card-custom">
    <div class="card-header">
        <div class="card-title">
            <h3 class="card-label">
                @ViewBag.Title
            </h3>
        </div>
        <div class="col-xxl-4 d-flex align-items-center justify-content-center">
            <div class="input-group input-group-lg input-group-solid my-2">
                <input type="text" class="form-control pl-4" placeholder="Search for a group..." id="filterKeyword" value="@ViewBag.userFilterKeyword">
                <div class="input-group-append">
                    <span class="input-group-text pr-3">
                        <a href="#" class="pointer mr-3" id="clearSearchBtn" @(string.IsNullOrEmpty(ViewBag.userFilterKeyword) ? "style=display:none;" : "") onclick="clearUserSearch()" data-toggle="tooltip" title="" data-original-title="Clear search">
                            <i class="fas fa-times icon-sm"></i>
                        </a>
                        <a class="pointer" href="#" onclick="getByKeyword()" data-toggle="tooltip" title="" data-original-title="Search"><i class="fa fa-search"></i></a>
                    </span>
                </div>
            </div>
        </div>
        <div class="card-toolbar">
            @Html.AjaxModalLink("Add Group", "/people/_CreateCommunicationGroup/", "Add Communication Group", "Save", "btn btn-light-primary btn-sm font-weight-bold", "")
        </div>
    </div>
    <div class="card-body">
        @if (Model.CommunicationGroups.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th width="20%" class="text-center">Allow Users To Unsubscribe</th>
                            <th width="15%" class="text-center">Group Members</th>
                            <th width="25%" class="text-center">Contact Methods</th>
                            <th width="10%" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var group in Model.CommunicationGroups)
                        {


                            var members = Model.CommunicationGroupsPeoples.Where(x => x.CommunicationGroupId == group.Id).ToList();
                            <tr>
                                <td>
                                    @group.Display
                                </td>
                                <td class="text-center">
                                    @Html.Raw(group.AllowUserToUnsubscribe ? "Yes" : "No")
                                </td>
                                <td class="text-center"><a href="/people/CommunicationGroupPeoples/@group.Id" data-toggle="tooltip" title="Manage group members" data-placement="top">@members.Count()</a></td>
                                <td class="text-center">
                                    @if (group.EnableEmail && group.EnableText && group.EnableSystemNotification)
                                    {
                                        <i class="fas fa-envelope mr-2" data-toggle="tooltip" data-original-title="Email Notifications"></i>
                                        <i class="fas fa-comment mr-2" data-toggle="tooltip" data-original-title="Text Message Notifications"></i>
                                        <i class="fas fa-bell" data-toggle="tooltip" data-original-title="System Notifications"></i>
                                    }
                                    else
                                    {
                                        var items = new List<string>();
                                        if (group.EnableEmail)
                                        {
                                            <i class="fas fa-envelope mr-2" data-toggle="tooltip" data-original-title="Email Notifications"></i>
                                        }
                                        if (group.EnableText)
                                        {
                                            <i class="fas fa-comment mr-2" data-toggle="tooltip" data-original-title="Text Message Notifications"></i>
                                        }
                                        if (group.EnableSystemNotification)
                                        {
                                            <i class="fas fa-bell" data-toggle="tooltip" data-original-title="System Notifications"></i>
                                        }
                                    }
                                </td>
                                <td class="text-center">
                                    @Html.AjaxModalLink("<i class='fa fa-pencil-alt text-hover-primary'></i>", $"/people/_EditCommunicationGroup/{group.Id}", "Edit Communication Group", "Update", "mr-2", "")
                                    <a href="#" onclick="deleteCommunicationGroup('@group.Id')" data-toggle="tooltip" title="Delete Group"><i class="fas fa-trash-alt text-hover-danger"></i></a>
                                    <a id="delete-communicationGroup-@group.Id" hidden href="/people/DeleteCommunicationGroup?id=@group.Id"></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center">
                <p>You don't have any communication groups yet.</p>
            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $('#filterKeyword').keyup(function (e) {
        if (e.currentTarget.value !== "") {
            $('#clearSearchBtn').show();
        } else {
            $('#clearSearchBtn').hide();
        }
    });
    $('#filterKeyword').keypress(function (e) {
        var key = e.which;
        if (key === 13) {
            getByKeyword();
            return false;
        }
    });
    function deleteCommunicationGroup(id) {
        Swal.fire({
            title: "Delete Communication Group",
            text: "Are you sure? This group will be deleted and cannot be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#aaa',
            cancelButtonText: 'Cancel',
            confirmButtonText: 'Yes, Delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $('#delete-communicationGroup-' + id)[0].click();
            }
        });
    }
    function getByKeyword() {
        if ($('#filterKeyword').val()) {
            let currentUrl = window.location;
            if (!currentUrl.href.includes('filterKeyword')) {
                if (currentUrl.href.includes('?')) {
                    let url = currentUrl.href + "&filterKeyword=" + $('#filterKeyword').val();
                    location.replace(url);
                }
                else {
                    let url = currentUrl.href + "?filterKeyword=" + $('#filterKeyword').val();
                    location.replace(url);
                }
            }
            else {
                let url = currentUrl.href;
                let items = url.split('filterKeyword=');
                if (items && items.length > 0) {
                    url = url.replace("=" + items[1], "=" + $('#filterKeyword').val());
                }
                location.replace(url);
            }
        }
    }

    function clearUserSearch() {
        if ($('#filterKeyword').val()) {
            $('#filterKeyword').val('');
            $('#clearSearchBtn').hide();
            $('#filterKeyword').focus();
            let currentUrl = window.location;
            if (currentUrl.href.includes('filterKeyword')) {
                {
                    let url = currentUrl.href;
                    let items = url.split('filterKeyword=');
                    if (items && items.length > 0) {
                        if (items[1].includes('&')) {
                            let subItems = items[1].split('&');
                            if (subItems && subItems.length > 0) {
                                url = url.replace("=" + subItems[0], "=");
                            }
                        }
                        else {
                            url = url.replace("=" + items[1], "=");
                        }
                    }
                    location.replace(url);
                }
            }
        }
    }
</script>