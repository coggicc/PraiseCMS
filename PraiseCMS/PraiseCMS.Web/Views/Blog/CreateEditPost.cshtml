@model PraiseCMS.DataAccess.Models.BlogPost

@{
    ViewBag.Title = string.IsNullOrEmpty(Model.Id) ? "Create Post" : "Edit Post";
}

<div class="card card-custom gutter-b">
    <div class="card-header">
        <div class="card-title">
            <h3 class="card-label">@ViewBag.Title</h3>
        </div>
    </div>
    @using (Html.BeginForm(RouteHelpers.CurrentAction, RouteHelpers.CurrentController, new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", id = "kt_form", role = "form", name = "kt_form" }))
    {
        <div class="card-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (!string.IsNullOrEmpty(Model.Id))
            {
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.CreatedBy)
                @Html.HiddenFor(x => x.CreatedDate)
                @Html.Hidden("action", "update")
            }

            <div class="form-group">
                <label>Title:</label>
                @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Lead:</label>
                @Html.TextBoxFor(x => x.Lead, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Lead, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Author:</label>
                @Html.TextBoxFor(x => x.AuthorId, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.AuthorId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Category:</label>
                @Html.DropDownListFor(x => x.CategoryId, (IEnumerable<SelectListItem>)ViewBag.BlogCategories, "Select a category...", new { @class = "form-control select2", style = "width:100%;" })
                @Html.ValidationMessageFor(x => x.CategoryId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Status:</label>
                @Html.DropDownListFor(x => x.Status, EnumExtensionMethods.GetEnumValues<BlogStatuses>().OrderBy(x => x.Value), new { @class = "form-control formal select2", style = "width:100%;text-transform:capitalize;" })
                @Html.ValidationMessageFor(x => x.Status, "", new { @class = "text-danger" })
            </div>
            @*<div class="form-group">
                    <label>Message:</label>
                    <div>
                        @Html.TextAreaFor(x => x.Message, new { @class = "form-control", id = "ckeditor_message", rows = "10" })
                        @Html.ValidationMessageFor(x => x.Message, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group row">
                <div class="col-lg-12">
                    @Html.TextAreaFor(x => x.Message, new { @class = "form-control", id = "ckeditor_message", rows = "10" })
                    @Html.ValidationMessageFor(x => x.Message, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between">
            <span>
                <input type="submit" value="Submit" class="btn btn-light-primary font-weight-bold" />
                <a href="/blog" class="btn btn-light-dark font-weight-bold">Cancel</a>
            </span>
            <a href="@Url.Action("deletepost", "blog", new { id = Model.Id })" class="btn btn-light-danger font-weight-bold pull-right">Delete</a>
        </div>
    }
</div>

<script type="text/javascript">
    $(function () {
        ClassicEditor
            .create(document.querySelector('#ckeditor_message'), {
                toolbar: ['undo', 'redo', 'bold', 'italic', 'numberedList', 'bulletedList']
            })
            .catch(error => {
                //console.log(error);
            });
    });
</script>