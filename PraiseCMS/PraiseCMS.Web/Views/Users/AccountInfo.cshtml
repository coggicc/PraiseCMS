@using PraiseCMS.Shared.Methods
@model PraiseCMS.DataAccess.Models.UserView

@{
    ViewBag.Title = "Account Info";
}

@section mobileOnlyMenu{
    <button class="burger-icon burger-icon-left mr-4 d-inline-block d-lg-none" id="kt_subheader_mobile_toggle">
        <span></span>
    </button>
}

<style type="text/css">
    .checkbox-inline {
        flex-wrap: wrap;
        line-height: 2;
    }
</style>
<div class="d-flex flex-column-fluid">
    @Html.Partial("_Sidebar", Model)
    <div class="flex-row-fluid ml-lg-8">
        <div class="card card-custom card-stretch">
            <div class="card-header py-3">
                <div class="card-title align-items-start flex-column">
                    <h3 class="card-label font-weight-bolder text-dark">Account Information</h3>
                    <span class="text-muted font-weight-bold font-size-sm mt-1">Manage your account information</span>
                </div>
                <div class="card-toolbar">
                    <button class="btn btn-light-primary mr-2 edit">Edit</button>
                </div>
            </div>
            <div class="card-body view-details py-4">
                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Account Number:</label>
                    <div class="col-8">
                        <span class="form-control-plaintext">@Model.User.Number</span>
                    </div>
                </div>

                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Username:<i class="far fa-question-circle ml-2" data-html="true" data-toggle="tooltip" title="Your email address serves as your username."></i></label>
                    @if (!string.IsNullOrEmpty(Model.User.UserName))
                    {
                        <div class="col-8">
                            <span class="form-control-plaintext">@Model.User.Email</span>
                        </div>
                    }
                </div>
                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Account Status:</label>
                    <div class="col-8">
                        <div><span class="label label-@(Model.User.IsActive ? "success" : "danger") label-inline label-xl">@(Model.User.IsActive ? ActiveStatuses.Active : ActiveStatuses.Inactive)</span></div>
                    </div>
                </div>
                <div class="form-group row my-2">
                    @{var rols = Model.Roles.Where(x => Model.CurrentUserRoles.Contains(x.Id)).ToList(); }
                    <label class="col-4 col-form-label">@(rols.Any() && rols.Count() > 1 ? "Roles" : "Role")</label>
                    <div class="col-8">
                        @if (rols.Any())
                        {
                            foreach (var role in rols)
                            {
                                <span class="label label-xl label-inline label-rounded label-outline-primary mr-2 mb-2">@role.Name</span>
                            }
                        }
                        else
                        {
                            <span class="label label-xl label-inline label-rounded label-outline-secondary mb-2">No roles assigned</span>
                        }
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.Settings.PrimaryChurchCampusId) && !Model.Settings.PrimaryChurchCampusId.Equals("unregister") && SessionVariables.Campuses.Count() > 1)
                {
                    var display = string.Empty;
                    if (SessionVariables.Campuses.Count > 1 && SessionVariables.Campuses.IsNotNull())
                    { display = SessionVariables.Campuses.Any(x => x.Id.Equals(Model.Settings.PrimaryChurchCampusId)) ? SessionVariables.Campuses.FirstOrDefault(x => x.Id.Equals(Model.Settings.PrimaryChurchCampusId)).Display : ""; }

                    <div class="form-group row my-2">
                        <label class="col-4 col-form-label">Primary Campus:</label>
                        <div class="col-8">
                            <span class="form-control-plaintext">@display</span>
                        </div>
                    </div>
                }
                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Paperless Giving Enabled:</label>
                    <div class="col-8">
                        <span class="form-control-plaintext">@(Model.Settings.PaperlessGiving ? "Yes" : "No")</span>
                    </div>
                </div>
                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Dark Mode Enabled:</label>
                    <div class="col-8">
                        <span class="form-control-plaintext">@(Model.Settings.DarkModeEnabled ? "Yes" : "No")</span>
                    </div>
                </div>
                <div class="form-group row my-2">
                    <label class="col-4 col-form-label">Full Width View:</label>
                    <div class="col-8">
                        <span class="form-control-plaintext">@(Model.Settings.FullWidthView ? "Yes" : "No")</span>
                    </div>
                </div>
            </div>
            <div class="edit-details" style="display:none;">
                @using (Html.BeginForm(RouteHelpers.CurrentAction, RouteHelpers.CurrentController, FormMethod.Post, new { @class = "form", id = "accountinfoForm", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(x => x.User.Id)
                    @Html.HiddenFor(x => x.Settings.PrimaryChurchId)
                    @Html.HiddenFor(x => x.User.Number)
                    @Html.HiddenFor(x => x.User.UserName)
                    @Html.HiddenFor(x => x.User.PasswordHash)
                    @Html.HiddenFor(x => x.User.SecurityStamp)
                    @Html.HiddenFor(x => x.Settings.Id)
                    @Html.HiddenFor(x => x.Settings.UserId)
                    @Html.HiddenFor(x => x.Settings.ProfileImage)
                    @Html.HiddenFor(x => x.Settings.CreatedBy)
                    @Html.HiddenFor(x => x.Settings.CreatedDate)
                    @Html.HiddenFor(x => x.BrowserRemembered)
                    @Html.HiddenFor(x => x.HasPassword)
                    <div class="card-body">
                        @if (TempData["SaveMessageAlert"] != null && TempData["SaveMessageAlert"].ToString() != "Success")
                        {
                            <div class="row">
                                <div class="col-12">
                                    <div class="alert alert-solid-success alert-bold" role="alert">
                                        <div class="alert-text">@TempData["SaveMessageAlert"]</div>
                                        <div class="alert-close">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true"><i class="la la-close"></i></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <label class="col-xl-3"></label>
                            <div class="col-lg-9">
                                <h5 class="font-weight-bold mb-6">Account Info</h5>
                            </div>
                        </div>
                        @if (SessionVariables.CurrentUser.IsSuperAdmin || SessionVariables.CurrentUser.IsAdmin)
                        {
                            <div class="form-group row">
                                <label class="col-lg-3 col-form-label">Account Status</label>
                                <div class="col-lg-9">
                                    <span class="switch switch-icon">
                                        <label>
                                            @Html.CheckBoxFor(x => x.User.IsActive, new { @class = "form-control" })
                                            <span></span>
                                        </label>
                                    </span>
                                </div>
                            </div>
                        }
                        <div @(SessionVariables.Campuses.Count() == 1 ? "hidden" : "") class="form-group row">
                            @if (SessionVariables.Campuses.Count() == 1)
                            {
                                Model.Settings.PrimaryChurchCampusId = SessionVariables.Campuses.FirstOrDefault()?.Id;
                            }
                            <label class="col-lg-3 col-form-label">Primary Campus</label>
                            <div class="col-lg-9">
                                @Html.DropDownListFor(x => x.Settings.PrimaryChurchCampusId, SessionVariables.Campuses.ToSelectList(x => x.Display, x => x.Id), "Select a campus...", new { @class = "form-control select2", style = "width:100%;text-transform:capitalize;" })
                                @Html.ValidationMessageFor(x => x.Settings.PrimaryChurchCampusId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-lg-3 col-form-label">Roles</label>
                            <div class="col-lg-9">
                                <div class="checkbox-inline">
                                    @if (SessionVariables.CurrentUser.IsSuperAdmin || SessionVariables.CurrentUser.IsAdmin)
                                    {
                                        foreach (var role in Model.Roles)
                                        {
                                            string isChecked = null;
                                            if (Model.CurrentUserRoles.Contains(role.Id))
                                            {
                                                isChecked = "checked";
                                            }
                                            <label class="checkbox">
                                                <input type="checkbox" name="CurrentUserRoles" value="@role.Id" @isChecked>
                                                <span></span>
                                                @role.Name
                                            </label>
                                        }
                                    }
                                    else
                                    {
                                        var roles = Model.Roles.Where(x => Model.CurrentUserRoles.Contains(x.Id)).ToList();
                                        if (roles.Any())
                                        {
                                            foreach (var role in roles)
                                            {
                                                <span class="label label-xl label-inline font-weight-boldest label-rounded label-primary mr-2">@role.Name</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="label label-xl label-inline font-weight-boldest label-rounded label-secondary">No roles assigned</span>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-lg-3 col-form-label">Paperless Giving</label>
                            <div class="col-lg-9">
                                <span class="switch switch-icon">
                                    <label>
                                        @Html.CheckBoxFor(x => x.Settings.PaperlessGiving, new { @class = "form-control" })
                                        <span></span>
                                    </label>
                                </span>
                                <span class="form-text text-muted">Receive your giving statements via email as soon as they are available.</span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-lg-3 col-form-label">Enable Dark Mode</label>
                            <div class="col-lg-9">
                                <span class="switch switch-icon">
                                    <label>
                                        @Html.CheckBoxFor(x => x.Settings.DarkModeEnabled, new { @class = "form-control" })
                                        <span></span>
                                    </label>
                                </span>
                                <span class="form-text text-muted">Love dark mode? Toggle the switch to change the navigation areas to a darker color.</span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-lg-3 col-form-label">Full Width View</label>
                            <div class="col-lg-9">
                                <span class="switch switch-icon">
                                    <label>
                                        @Html.CheckBoxFor(x => x.Settings.FullWidthView, new { @class = "form-control" })
                                        <span></span>
                                    </label>
                                </span>
                                <span class="form-text text-muted"><span class="font-weight-bold">For large monitors:</span> Maximize the viewing area of the screen by reducing whitespace surrounding your data.</span>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a onclick="submit()" class="btn btn-light-primary font-weight-bold mr-2">Save Changes</a>
                        <a href="/users/accountinfo?userid=@Model.User.Id" class="btn btn-light-dark font-weight-bold">Cancel</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function submit() {
        var currentUserRoles = $('input[name="CurrentUserRoles"]:checked').map(function () { return this.value; }).get();
        if (!currentUserRoles || !currentUserRoles.length) {
            wizardValidationMessage("The user must have at least one role.", "warning", true, "Warning");
            return false;
        }
        $('#accountinfoForm').submit();
    };

    $(function () {
        $(".edit").click(function () {
            $(".view-details").toggle();
            $(".edit-details").toggle();
        });

        $(document).on("change", "#User_IsActive", function () {
            var $this = $(this);
            var $prop = $this.prop("checked");
            if ($prop) {
                swal.fire({
                    title: "Activate Account",
                    text: "Are you sure you want to activate this user's account?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#aaa',
                    cancelButtonText: "Cancel",
                    confirmButtonText: 'Yes, Activate it!'
                }).then(function (result) {
                    if (!result.value) {
                        $this.prop("checked", false);
                    }
                });
            } else {
                swal.fire({
                    title: "Cancel Account",
                    text: "Are you sure you want to cancel this user's account?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#aaa',
                    cancelButtonText: "Cancel",
                    confirmButtonText: 'Yes, Cancel it!'
                }).then(function (result) {
                    if (!result.value) {
                        $this.prop("checked", true);
                    }
                });
            }
        });
    });
</script>
@section belowscripts
{
    <script src="~/Content/assets/js/pages/custom/profile/profile.js?v=7.0.4"></script>
}