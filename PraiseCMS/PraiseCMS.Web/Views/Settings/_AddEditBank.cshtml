@model PraiseCMS.DataAccess.Models.PaymentMethodViewModel
@using PraiseCMS.Shared.Methods
@{
    ViewBag.Title = (RouteHelpers.CurrentAction.Contains("Edit") ? "Edit" : "Add") + " Bank Account";
    var mode = "";
}

@section leftsubheader{
    @Html.Partial("_AccountSubHeader")
}

@section mobileOnlyMenu{
    <button class="burger-icon burger-icon-left mr-4 d-inline-block d-lg-none" id="kt_subheader_mobile_toggle">
        <span></span>
    </button>
}
<div class="d-flex flex-column-fluid">
    @Html.Partial("_Sidebar", SessionVariables.CurrentChurch)
    <div class="flex-row-fluid ml-lg-8">
        <div class="card card-custom">
            <div class="card-header card-header-tabs-line">
                <div class="card-title">
                    <h3 class="card-label">@ViewBag.Title</h3>
                </div>
                @if (RouteHelpers.CurrentAction.Contains("Edit"))
                {
                    <div class="card-toolbar">
                        <button class="btn btn-outline-danger font-weight-bolder font-size-sm" onclick="deleteMethod('@Model.PaymentAccount.AccountGUID',true)">Delete</button>
                    </div>
                    mode = "readonly";
                }
            </div>
            @using (Html.BeginForm(RouteHelpers.CurrentAction, RouteHelpers.CurrentController, FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
            {
                <div class="card-body">
                    @if (RouteHelpers.CurrentAction.Contains("Edit"))
                    {
                        <div class="alert alert-custom alert-notice alert-light-info fade show" role="alert">
                            <div class="alert-icon"><i class="fas fa-exclamation-triangle"></i></div>
                            <div class="alert-text"><strong>Note:</strong> Only the nickname field is editable for this payment method. If you need to modify other details, you'll need to delete the payment method and add it again.</div>
                            <div class="alert-close">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true"><i class="la la-close"></i></span>
                                </button>
                            </div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-lg-6">
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(x => x.PaymentAccount.AccountGUID)
                            @if (mode.IsNullOrEmpty())
                            {
                                <div class="form-group row">
                                    <label class="col-lg-4 col-form-label">Account Type:</label>
                                    <div class="col-lg-8">
                                        @Html.DropDownListFor(x => x.PaymentAccount.AccountType, BankAccountTypes.Items.ToSelectList("Select Account Type...", x => x, x => x, x => x.Contains(BankAccountTypes.Checking)), new { @class = "form-control select2", name = "BankAccountType", style = "width:100%;" })
                                        @Html.ValidationMessageFor(x => x.PaymentAccount.AccountType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-4 col-form-label">Routing Number:</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(x => x.PaymentAccount.RoutingNumber, new { placeholder = "Routing Number", @class = "form-control numeric dynamic" })
                                        @Html.ValidationMessageFor(x => x.PaymentAccount.RoutingNumber, "", new { @class = "text-danger" })
                                        <div class="routing-feedback"></div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-4 col-form-label">Account Number:</label>
                                    <div class="col-lg-8">
                                        @Html.TextBoxFor(x => x.PaymentAccount.AccountNumber, new { placeholder = "Account Number", @class = "form-control numeric dynamic" })
                                        @Html.ValidationMessageFor(x => x.PaymentAccount.AccountNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <p>@Model.PaymentAccount.AccountNumber</p>
                            }
                            <div class="form-group row">
                                <label class="col-lg-4 col-form-label">Nickname:</label>
                                <div class="col-lg-8">
                                    @Html.TextBoxFor(x => x.PaymentAccount.NickName, new { placeholder = "Ex. My Savings Account", @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.PaymentAccount.NickName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-light-primary font-weight-bold">Save Changes</button>
                    <a href="/settings/paymentmethods" class="btn btn-light-dark font-weight-bold">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>
@section belowScripts
{
    <script type="text/javascript">
        const edit = '@mode.IsNotNullOrEmpty()' === "True" ? true : false;
        if (edit) {
            $('.dynamic').attr("readonly","readonly");
            $('.dynamic').css('cursor','not-allowed');
        }
    </script>
    <script src="~/Content/assets/js/pages/custom/profile/profile.js?v=7.0.4"></script>
}