@using PraiseCMS.Shared.Methods
@model PraiseCMS.DataAccess.Models.CreateEditWidgetVM

@{
    ViewBag.Title = "Create/Edit Widget";
}

@if (SessionVariables.CurrentUser.IsAdmin || SessionVariables.CurrentUser.IsSuperAdmin)
{
    @section subheader{
        <div class="d-flex align-items-center">
            <a href="/dashboardtemplates" class="btn btn-light-primary btn-sm mr-2">Dashboards</a>
            <a href="/dashboardtemplates/widgets" class="btn btn-light-primary btn-sm">Widgets</a>
        </div>
    }
}

<style>
    .checkbox-inline {
        flex-wrap: wrap;
        line-height: 2;
    }

    .checkbox > span {
        top: 3px !important;
    }

    .checkbox-inline .checkbox {
        margin-left: 15px;
        margin-bottom: 10px;
        margin-right: 0 !important;
    }
</style>
<div class="card card-custom">
    <div class="card-header">
        <div class="card-title">
            <h3 class="card-label">@ViewBag.Title</h3>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm(RouteHelpers.CurrentAction, RouteHelpers.CurrentController, FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.Widget.Id)
            @Html.HiddenFor(x => x.Widget.ImageUrl)
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Name</label>
                <div class="col-lg-9">
                    @Html.EditorFor(x => x.Widget.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Widget.Name)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Description</label>
                <div class="col-lg-9">
                    @Html.TextAreaFor(x => x.Widget.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Widget.Description)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Files</label>
                <div class="col-lg-9">
                    @Html.DropDownListFor(x => x.Widget.FileName, Model.Files, "Select a file to map with widget...", new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(x => x.Widget.FileName)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Location</label>
                <div class="col-lg-9">
                    <div class="radio-inline">
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.Location, "Top", new { @class = "form-check-input" })
                            <span></span>
                            Top Tiles
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.Location, "Main", new { @class = "form-check-input" })
                            <span></span>
                            Main Container
                        </label>
                    </div>
                    @Html.ValidationMessageFor(x => x.Widget.Location)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Layout Size</label>
                <div class="col-lg-9">
                    <div class="radio-inline">
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.LayoutSize, "col-sm-6 col-md-3 col-lg-3", new { @class = "form-check-input" })
                            <span></span>
                            @WidgetSizes.Quarter
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.LayoutSize, "col-sm-6 col-md-6 col-lg-4", new { @class = "form-check-input" })
                            <span></span>
                            @WidgetSizes.Third
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.LayoutSize, "col-sm-12 col-md-6 col-lg-6", new { @class = "form -check-input" })
                            <span></span>
                            @WidgetSizes.Half
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(x => x.Widget.LayoutSize, "col-12", new { @class = "form-check-input" })
                            <span></span>
                            @WidgetSizes.Full
                        </label>
                    </div>
                    @Html.ValidationMessageFor(x => x.Widget.LayoutSize)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Category</label>
                <div class="col-lg-9">
                    <div class="checkbox-inline row">
                        @foreach (var category in Model.WidgetCategoryTypes)
                        {
                            string isChecked = null;
                            if (Model.WidgetCategories.IsNotNull() && Model.WidgetCategories.Count > 0 || Model.SelectedCategories.Count > 0)
                            {
                                if (Model.WidgetCategories.Any(x => x.CategoryTypeId == category.Id) || Model.SelectedCategories.Contains(category.Id))
                                {
                                    isChecked = "checked";
                                }
                            }
                            <label class="checkbox">
                                <input type="checkbox" name="SelectedCategories" value="@category.Id" @isChecked />
                                <span></span>
                                @category.Name
                            </label>
                        }
                    </div>
                    @Html.ValidationMessageFor(x => x.SelectedCategories)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">Roles</label>
                <div class="col-lg-9">
                    <div class="checkbox-inline row">
                        @foreach (var role in Model.Roles.Where(x => x.Name != "Donor").ToList())
                        {
                            string isChecked = null;
                            if (Model.WidgetPermissions.IsNotNull() && Model.WidgetPermissions.Count > 0 || Model.SelectedRoles.Count > 0)
                            {
                                if (Model.WidgetPermissions.Any(x => x.TypeId == role.Id) || Model.SelectedRoles.Contains(role.Id))
                                {
                                    isChecked = "checked";
                                }
                            }
                            <label class="checkbox">
                                <input type="checkbox" name="SelectedRoles" value="@role.Id" @isChecked />
                                <span></span>
                                @role.Name
                            </label>
                        }
                    </div>
                    @Html.ValidationMessageFor(x => x.SelectedRoles)
                </div>
            </div>
            <div class="form-group row">
                <label class="col-lg-2 col-form-label">
                    Choose File
                </label>
                <div class="col-lg-4">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="image" name="image" />
                        <label class="custom-file-label" for="image">Choose file</label>
                    </div>
                </div>
                <div class="col-lg-6">
                    @if (Model.Widget.ImageUrl.IsNotNullOrEmpty())
                    {
                        <img class="img-fluid" src="@Model.Widget.ImageUrl.ToCompleteImagePath()" />
                    }
                </div>
            </div>
            <div class="inner-card-footer">
                <button type="submit" class="btn btn-light-primary mr-2">Save Changes</button>
                <a href="/dashboardtemplates/widgets" class="btn btn-light-dark font-weight-bold">Cancel</a>
            </div>
        }
    </div>
</div>