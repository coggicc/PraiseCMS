@model PraiseCMS.DataAccess.Models.Campus

<div id="campus-div">
    @using (Ajax.BeginForm(RouteHelpers.CurrentAction, RouteHelpers.CurrentController, new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "campus-div" }, new { @class = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ChurchId)
        @Html.HiddenFor(x => x.CreatedBy)
        @Html.HiddenFor(x => x.CreatedDate)

        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Name:</label>
            <div class="col-lg-9">
                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Is Active?</label>
            <div class="col-lg-9">
                <span class="switch switch-icon">
                    <label>
                        @Html.CheckBoxFor(x => x.IsActive, new { name = "isActive" })
                        @Html.ValidationMessageFor(x => x.IsActive, "", new { @class = "text-danger" })
                    </label>
                </span>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Phone:</label>
            <div class="col-lg-9">
                @Html.EditorFor(x => x.Phone, new { htmlAttributes = new { @class = "form-control phone" } })
                @Html.ValidationMessageFor(x => x.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Timezone:</label>
            <div class="col-lg-9">
                @Html.DropDownListFor(x => x.TimeZone, Constants.GetTimeZonesAsDropdown().OrderBy(x => x.Text), "Select a timezone...", new { @class = "form-control select2", style = "width:100%;" })
                @Html.ValidationMessageFor(x => x.TimeZone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Address 1:</label>
            <div class="col-lg-9">
                @Html.EditorFor(x => x.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Address1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Address 2:</label>
            <div class="col-lg-9">
                @Html.EditorFor(x => x.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Address2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">City:</label>
            <div class="col-lg-9">
                @Html.EditorFor(x => x.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">State:</label>
            <div class="col-lg-9">
                @Html.DropDownListFor(x => x.State, Constants.GetAbbrevToStateAsDropdown().OrderBy(x => x.Text), "Select a state...", new { @class = "form-control formal select2", style = "width:100%;text-transform:capitalize;" })
                @Html.ValidationMessageFor(x => x.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Zip:</label>
            <div class="col-lg-9">
                @Html.TextBoxFor(x => x.Zip, new { maxlength = "5", @class = "form-control numeric" })
                @Html.ValidationMessageFor(x => x.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
    }
</div>