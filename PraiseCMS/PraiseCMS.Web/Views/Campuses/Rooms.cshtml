@model IEnumerable<PraiseCMS.DataAccess.Models.Room>
@{
    ViewBag.Title = "Rooms";
    var buildings = ViewData.ContainsKey("Buildings") ? (List<Building>)ViewData["Buildings"] : new List<Building>();
    var floors = ViewData.ContainsKey("Floors") ? (List<Floor>)ViewData["Floors"] : new List<Floor>();
}
@section leftsubheader{
    @Html.Partial("_CampusesSubheader")
}
<div class="card card-custom gutter-b">
    <div class="card-header">
        <div class="card-title">
            <h3 class="card-label">
                @ViewBag.Title
            </h3>
        </div>
        <div class="card-toolbar">
            @if (Model.Any())
            {
                <div class="dropdown">
                    <div id="filter-modal" class="topbar-item" data-toggle="dropdown" data-offset="10px,0px">
                        <div class="btn btn-light-primary btn-sm font-weight-bold mr-2"><i class="fas fa-filter"></i>Filter</div>
                    </div>
                    <div class="mt-2 dropdown-menu p-0 m-0 dropdown-menu-right dropdown-menu-anim-up dropdown-menu-lg">
                        <form id="filter-form">
                            <div class="card card-custom">
                                <div class="card-header">
                                    <div class="card-title"><h3 class="card-label">Filter Options</h3></div>
                                    <div class="card-toolbar cursor-pointer" onclick="closeFilterModal()"><i class="fas fa-times"></i></div>
                                </div>
                                <div class="card-body">
                                    <div class="form-group">
                                        <label>Campus:</label>
                                        <div class="row">
                                            @Html.DropDownList("filterCampusId", SessionVariables.Campuses.ToSelectList(x => x.Display, x => x.Id).OrderBy(x => x.Text), "Select a campus...", new { @class = "form-control select2", style = "width:100%;" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Building:</label>
                                        <div class="row">
                                            @Html.DropDownList("filterBuildingId", buildings.ToSelectList(x => x.Display, x => x.Id).OrderBy(x => x.Text), "Select a building...", new { @class = "form-control select2", style = "width:100%;" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Floor:</label>
                                        <div class="row">
                                            @Html.DropDownList("filterFloorId", floors.ToSelectList(x => x.Display, x => x.Id).OrderBy(x => x.Text), "Select a floor...", new { @class = "form-control select2", style = "width:100%;" })
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" onclick="resetFilter()" class="btn btn-hover-light-dark font-weight-bold">Reset</button>
                                    <button type="button" onclick="applyFilter()" class="btn btn-light-primary font-weight-bold">Apply</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            }
            @Html.AjaxModalLink("Create Room", "/campuses/_createroom", "Create Room", "Save", "btn btn-light-primary font-weight-bold btn-sm", "")
        </div>
    </div>
    <div class="card-body rooms-table-div">
        @Html.Partial("_RoomsList", Model)
    </div>
</div>
@section belowScripts
{
    <script type="text/javascript">
        $(function () {
            var filterApplied = false;

            function resetFilter() {
                document.getElementById('filter-form').reset();
                $('.select2').select2();
                if (filterApplied) {
                    filterApplied = false;
                    getData();
                }
            }

            function applyFilter() {
                if (!$('#filterCampusId').val() && !$('#filterBuildingId').val() && !$('#filterFloorId').val()) {
                    Notify("warning", "WARNING", 'No Filter Applied!');
                    return false;
                }
                filterApplied = true;
                getData();
            }

            function getData() {
                $.get("/campuses/GetRooms", { "campusId": $('#filterCampusId').val(), "buildingId": $('#filterBuildingId').val(), "floorId": $('#filterFloorId').val() }, function (result) {
                    $('#filter-modal').trigger('click');
                    $('.rooms-table-div').html(result);
                });
            }

            var filterbuildingsList = @Html.Raw(Json.Encode(buildings));
            var filterfloorList = @Html.Raw(Json.Encode(floors));
            let filterbuildingByCampus = [];
            let filterfilteredFloors = [];

            function bindFilterBuildings(campusId, selectedId) {
                $("#filterBuildingId").val('');
                if (campusId) {
                    filterbuildingByCampus = filterbuildingsList.filter(x => x.CampusId === campusId);
                } else {
                    filterbuildingByCampus = filterbuildingsList;
                }
                var $sel = $("#filterBuildingId").empty().append('<option value="">Select a building...</option>');
                $.each(filterbuildingByCampus, function () {
                    $sel.append("<option value='" + this.Id + "'>" + this.BuildingName + "</option>");
                });
            }

            function bindFilterFloors(campusId, buildingId, selectedId) {
                $("#filterFloorId").val('');
                if (buildingId) {
                    filterfilteredFloors = filterfloorList.filter(x => x.BuildingId === buildingId);
                } else if (campusId) {
                    filterfilteredFloors = filterfloorList.filter(x => x.CampusId === campusId);
                } else {
                    filterfilteredFloors = filterfloorList;
                }
                var $sel = $("#filterFloorId").empty().append('<option value="">Select a floor...</option>');
                $.each(filterfilteredFloors, function () {
                    $sel.append("<option value='" + this.Id + "'>" + this.FloorName + "</option>");
                });
            }

            $(document).on("change", "#filterCampusId", function () {
                bindFilterBuildings($(this).val());
                bindFilterFloors($(this).val());
            });

            $(document).on("change", "#filterBuildingId", function () {
               bindFilterFloors($('#CampusId').val(), $(this).val());
            });
        });
    </script>
}